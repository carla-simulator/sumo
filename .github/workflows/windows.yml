name: windows

on:
  push:            # run on push events
    paths-ignore:  # but ignore everything in the docs subfolder
      - 'docs/**'
    branches:
      - '**'
    tags:
      - '*'
  pull_request:    # run on pull requests
    paths-ignore:  # but ignore everything in the docs subfolder
      - 'docs/**'
  workflow_dispatch:
  schedule:
    - cron:  '25 1 * * *'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [plain, extra]
    env:
      CC: cl
      CXX: cl
      TEXTTEST_TMP: D:/texttest

    steps:
    - name: Cloning SUMO
      uses: actions/checkout@v4
      with:
        path: sumo
        fetch-depth: 0
        filter: tree:0
        # to work around actions/checkout#1467
        ref: ${{ github.ref }}

    - name: Cloning SUMO Libraries
      uses: actions/checkout@v4
      with:
        repository: DLR-TS/SUMOLibraries
        path: sumolibraries

    - name: ccache
      # do a clean build once a day
      if: github.event_name != 'schedule'
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.build_type }}
        variant: sccache

    # required for CMake to find Ninja
    - name: "Set up MSVC Developer Command Prompt"
      # uses: seanmiddleditch/gha-setup-vsdevenv@v4  # disabled until it gets an update for node.js
      uses: compnerd/gha-setup-vsdevenv@main

    - name: Setup Python dependencies
      run: python -m pip install -r sumo/tools/req_ci.txt -r sumo/tools/requirements.txt texttest

    - name: Building SUMO plain
      if: matrix.build_type == 'plain'
      run: |
        python -m pip install build wheel
        cd sumo
        cmake -Bbuild_msvc -GNinja -DCHECK_OPTIONAL_LIBS=false -DENABLE_JAVA_BINDINGS=false
        cmake --build build_msvc

    - name: Building SUMO extra
      if: matrix.build_type == 'extra'
      run: |
        cd sumo
        cmake -Bbuild_msvc -GNinja -DENABLE_JAVA_BINDINGS=false
        cmake --build build_msvc

    - name: Building SUMO debug
      if: github.event_name == 'workflow_dispatch'
      run: |
        cd sumo
        cmake -Bbuild_msvc_debug -GNinja -DCMAKE_BUILD_TYPE=Debug
        cmake --build build_msvc_debug

    - name: Building TraaS
      run: cmake --build sumo/build_msvc --config Release --target traas

    - name: Uploading artifacts (SUMO binaries)
      uses: actions/upload-artifact@v4
      with:
        name: windows-${{ matrix.build_type }}-binaries
        path: sumo/bin
        retention-days: 30

    - name: Running examples and unit tests
      run: |
        cmake --build sumo/build_msvc --config Release --target examples
        ctest --test-dir sumo/build_msvc -E texttest --output-on-failure

    - name: Plain tests
      if: matrix.build_type == 'plain'
      run: |
        $env:TEXTTEST_CI_APPS = "-a activitygen,dfrouter,duarouter,jtrrouter"
        sumo\tests\runCiTests.bat texttest.exe
        $env:TEXTTEST_CI_APPS = "-a marouter,netgen,od2trips,polyconvert,netconvert"
        sumo\tests\runCiTests.bat texttest.exe
        $env:TEXTTEST_CI_APPS = "-a sumo"
        sumo\tests\runCiTests.bat texttest.exe

    - name: Extra tests
      if: matrix.build_type == 'extra'
      run: |
        $env:TEXTTEST_CI_APPS = "-a complex,traci"
        sumo\tests\runCiTests.bat texttest.exe
        $env:TEXTTEST_CI_APPS = "-a sumo.meso,sumo.extra,netconvert.gdal,polyconvert.gdal"
        sumo\tests\runCiTests.bat texttest.exe

    - name: Compressing test results
      if: failure()
      run: |
        dir d:\texttest
        Compress-Archive -Path D:/texttest -DestinationPath D:/texttest/tt.zip
        dir d:\texttest

    - name: Uploading test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: texttesttmp-${{ matrix.build_type }}
        path: D:/texttest/tt.zip
        if-no-files-found: warn
